name: CI/CD Pipeline with AI Log Analysis and Auto-Rollback

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üìÇ Checkout Code
        uses: actions/checkout@v3

      - name: üõ†Ô∏è Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # Use Python 3.10 instead of 3.12

      - name: üõ†Ô∏è Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: üì¶ Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt

      - name: üèóÔ∏è Build Docker Image
        run: |
          docker build -t my-app -f docker/Dockerfile .
          echo "‚úÖ Build successful"

      - name: üöÄ Start the application
        run: |
          docker-compose -f docker/docker-compose.yml up -d
          # Wait for the application to start
          sleep 10

      - name: ‚úÖ Run Tests
        run: |
          pip install pytest requests
          echo "‚úÖ Running tests (Mock Step)"

      - name: üîç Run AI Log Analysis
        run: |
          # Create a sample log file if it doesn't exist
          [ -f ai_log_analysis/deployment_logs.txt ] || echo "INFO: Application started\nWARNING: High memory usage\nERROR: Failed to connect to database" > ai_log_analysis/deployment_logs.txt
          python ai_log_analysis/analyze_logs.py

      - name: üîÑ Check Deployment Status
        run: |
          # Use curl to check the service
          RESPONSE_CODE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:5000 || echo "000")
          if [ "$RESPONSE_CODE" != "200" ]; then
            echo "‚ùå Deployment failed with status code $RESPONSE_CODE! Rolling back..."
            bash rollback/rollback.sh
            exit 1
          else
            echo "‚úÖ Deployment successful!"
          fi